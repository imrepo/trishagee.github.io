<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Java9 on Trisha Gee </title>
    <link>https://trishagee.github.io/tags/java9/index.xml/</link>
    <language>en-us</language>
    <author>Trisha Gee</author>
    <rights>Copyright (c) 2011 - 2014, Trisha Gee; all rights reserved.</rights>
    <updated>Tue, 28 Feb 2017 00:00:00 UTC</updated>
    
    <item>
      <title>Real World Java 9</title>
      <link>https://trishagee.github.io/presentation/real_world_java_9/</link>
      <pubDate>Tue, 28 Feb 2017 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>https://trishagee.github.io/presentation/real_world_java_9/</guid>
      <description>

&lt;p&gt;How is Java 9 going to change the way developers work?&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;Abstract&lt;/h2&gt;

&lt;p&gt;The feature we always hear about whenever Java 9 is in the news is Jigsaw, modularity.  But this doesn&amp;rsquo;t scratch the
same developer itch that Java 8&amp;rsquo;s lambdas and streams did, and we&amp;rsquo;re left with a vague sensation that the next version might not be that interesting.&lt;/p&gt;

&lt;p&gt;Java 9 actually has a lot of great additions and changes to make development a bit nicer.  These features can&amp;rsquo;t be lumped under an umbrella term like Java 8&amp;rsquo;s lambdas and streams, the changes are scattered throughout the APIs and language features that we regularly use.&lt;/p&gt;

&lt;p&gt;In this presentation Trisha will show, via live coding:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How we can use the new Flow API to utilise Reactive Programming&lt;/li&gt;
&lt;li&gt;How the improvements to the Streams API make it easier to control real-time streaming data&lt;/li&gt;
&lt;li&gt;How to the Collections convenience methods simplify code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Along the way we&amp;rsquo;ll bump into other Java 9 features, including some of the additions to interfaces and changes to deprecation.  We’ll see that once you start using Java 9, you can&amp;rsquo;t go back to Before.&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;Resources&lt;/h2&gt;

&lt;p&gt;The code for this presentation was originally created to demonstrate Java 8 code in
&lt;a href=&#34;/presentation/java8_in_anger&#34;&gt;Java 8 in Anger&lt;/a&gt;, take a look at the videos there to see more background on the application and how it used Java 8 Streams and Lambda Expressions for the core business logic. The code and the presentation
evolved &lt;a href=&#34;https://youtu.be/sKozumGWAOo&#34;&gt;to include some Java 9 features&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I have another Java 9 talk based off this code, &lt;a href=&#34;/presentation/java_9_are_we_there_yet&#34;&gt;Anticipating Java 9 - Functionality and Tooling&lt;/a&gt;, which demos more individual Java 9 features and talks specifically about IntelliJ IDEA&amp;rsquo;s support for it.&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;Code&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/trishagee/sense-nine&#34;&gt;https://github.com/trishagee/sense-nine&lt;/a&gt;. The full application with all Java 9 code is currently under the &lt;em&gt;working-system&lt;/em&gt; branch.&lt;/li&gt;
&lt;li&gt;Original Java 8 code comes from &lt;a href=&#34;https://github.com/trishagee/sense&#34;&gt;https://github.com/trishagee/sense&lt;/a&gt;, the &lt;em&gt;master&lt;/em&gt; branch has the most up-to-date final working Java 8 application.  JUnit 5 tests come from the &lt;em&gt;junit-5&lt;/em&gt; branch. Java 8 and 9 features live side-by-side in &lt;em&gt;yow-brisbane&lt;/em&gt;. That app was built with Java build 9-ea+146, but does not work with build 9-ea+156&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;Java 9&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://openjdk.java.net/projects/jdk9/&#34;&gt;JDK 9 Project Page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jdk9.java.net/download/&#34;&gt;Download JDK 9 EA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sitepoint.com/ultimate-guide-to-java-9/&#34;&gt;The Ultimate Guide to Java 9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sitepoint.com/inside-java-9-part-i/&#34;&gt;Inside Java 9 – Version Schema, Multi-Release JARs, and More&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sitepoint.com/inside-java-9-part-ii/&#34;&gt;Inside Java 9 – Performance, Compiler, and More&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;Jigsaw&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://openjdk.java.net/projects/jigsaw/&#34;&gt;Project Jigsaw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://openjdk.java.net/projects/jigsaw/quick-start&#34;&gt;Quick Start Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://openjdk.java.net/projects/jigsaw/spec/sotms/&#34;&gt;The State of the Module System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mreinhold.org/blog/jigsaw-module-system&#34;&gt;Project Jigsaw: The module system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.infoq.com/articles/Latest-Project-Jigsaw-Usage-Tutorial&#34;&gt;Programming with Modularity and Project Jigsaw. A Tutorial Using the Latest Early Access Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.codecentric.de/en/2015/11/first-steps-with-java9-jigsaw-part-1&#34;&gt;First steps with Java 9 and Project Jigsaw – Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.codecentric.de/en/2015/12/first-steps-with-java9-jigsaw-part-2/&#34;&gt;First steps with Java 9 and Project Jigsaw – Part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/8/docs/technotes/tools/unix/jdeps.html&#34;&gt;Jdeps Tool&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_5&#34;&gt;Reactive Programming and RxJava&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://community.oracle.com/docs/DOC-1006738&#34;&gt;Reactive Programming with JDK 9 Flow API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ReactiveX/RxJava/wiki&#34;&gt;RxJava Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.infoq.com/articles/rxjava2-by-example&#34;&gt;RXJava2 by Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.vogella.com/tutorials/RxJava/article.html&#34;&gt;RxJava 2.0 - Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zeroturnaround.com/rebellabs/rxjava-for-easy-concurrency-and-backpressure&#34;&gt;RxJava for easy concurrency and backpressure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.danlew.net/2016/06/13/multicasting-in-rxjava/&#34;&gt;Multicasting in RxJava&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.infoq.com/presentations/streams-jdk&#34;&gt;Reactive Streams, j.u.concurrent, &amp;amp; beyond!&lt;/a&gt; (video)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://spring.io/blog/2016/04/19/understanding-reactive-types&#34;&gt;Understanding Reactive Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.slideshare.net/rolandkuhn/reactive-streams&#34;&gt;Reactive Streams: Handling Data-Flow the Reactive Way&lt;/a&gt;(slides)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://rxmarbles.com/&#34;&gt;RxMarbles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_6&#34;&gt;REPL&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://openjdk.java.net/projects/kulla/&#34;&gt;REPL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jclarity.com/2015/04/15/java-9-repl-getting-started-guide/&#34;&gt;Java 9 REPL – Getting started guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_7&#34;&gt;Other&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/gof-design-patterns-using-java-02&#34;&gt;GoF - Adapter Pattern&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Anticipating Java 9 - Functionality and Tooling</title>
      <link>https://trishagee.github.io/presentation/java_9_are_we_there_yet/</link>
      <pubDate>Thu, 22 Sep 2016 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>https://trishagee.github.io/presentation/java_9_are_we_there_yet/</guid>
      <description>

&lt;p&gt;Looking ahead to what functionality is available in Java 9, and IntelliJ IDEA&amp;rsquo;s support (current and future) for it.&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;Slides&lt;/h2&gt;

&lt;p&gt;&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/ePGXu8U5H0CSh&#34; width=&#34;595&#34; height=&#34;485&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;//www.slideshare.net/trishagee/java-9-functionality-and-tooling&#34; title=&#34;Java 9 Functionality and Tooling&#34; target=&#34;_blank&#34;&gt;Java 9 Functionality and Tooling&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a target=&#34;_blank&#34; href=&#34;//www.slideshare.net/trishagee&#34;&gt;Trisha Gee&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;Abstract&lt;/h2&gt;

&lt;p&gt;Seems like we’ve been waiting for Java 9 for eternity.  We’ve been hearing all about Jigsaw since Java 7, so we’ll be forgiven for thinking that’s the most interesting thing about the next Java release.  What we should be wondering is, will Java 9 it change the way we develop, like Java 8 did?  Will my tools break when I try to use it? Is it worth playing with it before it comes out, or should I just wait until everything stabilises?&lt;/p&gt;

&lt;p&gt;In this talk, Trisha will take a look at some of the features in Java 9, including modularity, the REPL, and the nice new Collections features.  Trisha will demonstrate, via live coding, these features in IntelliJ IDEA, and talk a bit about the current and future support for Java 9 in IntelliJ IDEA.&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;Resources&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://jdk9.java.net/download/&#34;&gt;Download the latest Java JDK here&lt;/a&gt; (the
talk uses build 143).&lt;/p&gt;

&lt;p&gt;At the time of writing, &lt;a href=&#34;https://blog.jetbrains.com/idea/2016/11/intellij-idea-2016-3-ga-java-8-and-es6-debugger-and-ui-improvements-and-a-ton-more/&#34;&gt;IntelliJ IDEA 2016.3&lt;/a&gt; comes with
some support for jigsaw. This support will continue to evolve, so keep an eye
on the &lt;a href=&#34;https://blog.jetbrains.com/idea/&#34;&gt;IntelliJ blog&lt;/a&gt; for further updates.&lt;/p&gt;

&lt;p&gt;The Jigsaw code I used was from the &lt;a href=&#34;http://openjdk.java.net/projects/jigsaw/quick-start&#34;&gt;Getting Started tutorial&lt;/a&gt;, and the &lt;a href=&#34;https://java.net/downloads/adoptopenjdk/REPL_Tutorial.pdf&#34;&gt;Java REPL
Tutorial&lt;/a&gt; helped me get started with JShell.&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;Help &amp;amp; Feedback&lt;/h2&gt;

&lt;p&gt;Get help and more information on JDK 9 from the
&lt;a href=&#34;https://community.oracle.com/community/java/java_desktop/java-se-early-access&#34;&gt;Oracle Community feedback forum&lt;/a&gt;. If you find a genuine
bug in the JDK, &lt;a href=&#34;http://bugreport.java.com/&#34;&gt;report it here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can report bugs and request features for IntelliJ IDEA in
&lt;a href=&#34;https://youtrack.jetbrains.com/issues/idea/&#34;&gt;YouTrack&lt;/a&gt;. Some Java 9 tickets you may be interested in:&lt;br /&gt;
&lt;a href=&#34;https://youtrack.jetbrains.com/issue/IDEA-161611&#34;&gt;IDEA-161611: Java REPL support for Java 9&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://youtrack.jetbrains.com/issue/IDEA-154240&#34;&gt;IDEA-154240: IDEA should work with JDK module system&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://youtrack.jetbrains.com/issue/IDEA-161641&#34;&gt;IDEA-161641: Produce JLink Artefacts&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;More information&lt;/h2&gt;

&lt;p&gt;Joseph Darcy&amp;rsquo;s talk on
&lt;a href=&#34;https://youtu.be/vKYzmIi_1LM&#34;&gt;JDK 9 Language, Tooling and Library Features&lt;/a&gt; from JavaOne is a good summary of what&amp;rsquo;s coming (&lt;a href=&#34;https://blogs.oracle.com/darcy/resource/JavaOne/J1_2016-jdk9-lang-tools-libs.pdf&#34;&gt;slides
also available&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Aurelio Garcia Ribeyro has a talk summarising all the features in Java 9, I can only find a summary version
&lt;a href=&#34;https://youtu.be/Ws2uT2Av42I&#34;&gt;in Spanish&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The OpenJDK wiki provides &lt;a href=&#34;https://wiki.openjdk.java.net/display/Adoption/JDK+9+Outreach&#34;&gt;guidance on running your code with Java 9&lt;/a&gt;, and a
&lt;a href=&#34;https://wiki.openjdk.java.net/display/quality/Quality+Outreach&#34;&gt;list of libraries and frameworks who are currently testing against Java 9&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
