<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Career on Trisha Gee </title>
    <link>https://trishagee.github.io/tags/career/index.xml/</link>
    <language>en-us</language>
    <author>Trisha Gee</author>
    <rights>Copyright (c) 2011 - 2014, Trisha Gee; all rights reserved.</rights>
    <updated>Tue, 25 Apr 2017 00:00:00 UTC</updated>
    
    <item>
      <title>Becoming Fully Buzzword Compliant</title>
      <link>https://trishagee.github.io/presentation/becoming_buzzword_compliant/</link>
      <pubDate>Tue, 25 Apr 2017 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>https://trishagee.github.io/presentation/becoming_buzzword_compliant/</guid>
      <description>

&lt;h1 id=&#34;toc_0&#34;&gt;Abstract&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;It’s all about Containers, Serverless and Reactive Programming right now!
ProgSCon London will explore these trends with leading industry experts. Several talks will also feature Blockchain, Microservices and Big Data.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;You’re here at ProgSCon to hear all about the latest trends in technology,
to learn about them and decide which ones to apply and figure out how. But
it’s a tall order, learning to be a fully buzzword compliant developer, architect or lead, especially when What’s Hot changes on practically a daily basis.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;During this talk, Trisha will give an irreverent overview of the current
technical landscape and present a survival guide for those who want to stay ahead in this turbulent industry.&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&#34;toc_1&#34;&gt;Resources&lt;/h1&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;News&lt;/h2&gt;

&lt;p&gt;These are the sources I mention in the talk and some of the tools I personally
use to help organise my news.  Definite slant towards the Java / JVM world.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sites&lt;/strong&gt;&lt;br /&gt;
You can subscribe to receive regular updates via email too if you prefer.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.infoq.com/&#34;&gt;InfoQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dzone.com&#34;&gt;DZone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.infoworld.com&#34;&gt;InfoWorld&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Newsletters&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://androidweekly.net/&#34;&gt;Android Weekly Newsletter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://groovycalamari.com/&#34;&gt;Groovy Calamari Newsletter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kotlinweekly.net/&#34;&gt;Kotlin Weekly Newsletter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://scalatimes.com/&#34;&gt;Scala Times Newsletter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sitepoint.com/java/&#34;&gt;Sitepoint Java Newsletter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baeldung.com/java-web-weekly/&#34;&gt;Baeldung Weekly Roundup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://info.jetbrains.com/Java-Annotated-Subscription.html&#34;&gt;Java Annotated Monthly Newsletter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://feedly.com&#34;&gt;Feedly&lt;/a&gt; - RSS Feed Aggregator&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getpocket.com&#34;&gt;Pocket&lt;/a&gt; - Lets you save articles for reading
later, including offline.  Useful for commuting.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;More Info&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Blockchain&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are literally the first articles I found with the search &amp;ldquo;blockchain
bluffers guide&amp;rdquo;. I am in no position to qualify how good they are, but they
gave me enough of an overview to make me feel comfortable I wouldn&amp;rsquo;t make any
stupid mistakes in 2 minutes of mentioning Blockchain.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.forbes.com/sites/bernardmarr/2017/01/24/a-complete-beginners-guide-to-blockchain/#373d2d46e607&#34;&gt;A Complete Beginner&amp;rsquo;s Guide To Blockchain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://dataconomy.com/2015/10/wtf-is-the-blockchain-a-guide-for-total-beginners/&#34;&gt;WTF is the Blockchain? A Guide for Total Beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blockgeeks.com/guides/what-is-blockchain-technology/&#34;&gt;What is Blockchain Technology? A Step-by-Step Guide For Beginners&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Reactive&lt;/strong&gt;
I&amp;rsquo;ve already listed resources for my research in this area in &lt;a href=&#34;/presentation/real_world_java_9&#34;&gt;Real World
Java 9&lt;/a&gt;, but these are particularly used in
this presentation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.oreilly.com/ideas/reactive-programming-vs-reactive-systems&#34;&gt;Reactive Programming vs Reactive Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Reactive_programming&#34;&gt;Reactive Programming Definition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://rxmarbles.com/&#34;&gt;RxMarbles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;toc_4&#34;&gt;Credits&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://flic.kr/p/b99vsi&#34;&gt;Enigma Machine Photo: Adam Foster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/File:Technology-Adoption-Lifecycle.png&#34;&gt;Crossing the Chasm Image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.bamedia.co.uk/?pg=portfolio&amp;amp;sp=onboard&#34;&gt;BA Business Life Magazine Image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flic.kr/p/zhyKQx&#34;&gt;Terminator 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.bitcoin.it/wiki/Bitcoin_symbol&#34;&gt;Bitcoin Symbol&lt;/a&gt;, actual image
from &lt;a href=&#34;http://www.unicode.org/L2/L2015/15229-bitcoin-sign.pdf&#34;&gt;Proposal for addition of bitcoin sign&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;toc_5&#34;&gt;Related Presentations&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/presentation/staying_ahead_of_the_curve&#34;&gt;Staying Ahead of the Curve&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/presentation/yow_2013_career_advice_for_programmers&#34;&gt;Career Advice for Programmers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>My Path To Evangelism</title>
      <link>https://trishagee.github.io/post/becoming_an_evangelist/</link>
      <pubDate>Thu, 02 Jul 2015 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>https://trishagee.github.io/post/becoming_an_evangelist/</guid>
      <description>&lt;p&gt;So, I get asked a lot about how I got into technical advocacy /
evangelism&lt;sup&gt;1&lt;/sup&gt;,
so it seems like the most cost-effective way to answer this question is to
write a post about it. Warning: it&amp;rsquo;s a long one!&lt;/p&gt;

&lt;p&gt;Firstly, let me caveat this (I always have caveats, don&amp;rsquo;t I?) with, &amp;ldquo;this is
my personal experience&amp;rdquo;.  There may be other ways to get into this role.&lt;/p&gt;

&lt;p&gt;Any long-time readers of the blog (I love you guys!!) will
know that I started blogging before I did any of this
running-around-the-world-speaking-at-conferences lark.  I started blogging
for a number of reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Even &amp;ldquo;back then&amp;rdquo; (probably around 2007), it was definitely an advantage to
have something external to the day job to differentiate you from other job
candidates.  I didn&amp;rsquo;t feel comfortable with open source, Stack Overflow
wasn&amp;rsquo;t invented yet (and even if it had been, I&amp;rsquo;m not sure I would have felt
knowledgeable enough to answer questions), and most of what I had learnt in
order to level-up my skills
was via blogs like &lt;a href=&#34;http://www.joelonsoftware.com/&#34;&gt;Joel Spolsky&amp;rsquo;s&lt;/a&gt; and
&lt;a href=&#34;http://randsinrepose.com/&#34;&gt;Rands in Repose&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I really enjoyed writing. One of the (many) things I had wanted to be
&amp;ldquo;when I grew up&amp;rdquo; was a writer or a journalist. I didn&amp;rsquo;t take that path
because I thought if I did I would be Poor Forever.  However, if I started
practising my writing in a blog, I would learn to find my voice, and have
something to show book publishers if I ever did get around to writing a
book, like I had always wanted to do.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If  you&amp;rsquo;ve ever started a blog, you know the problem is thinking of things to
write about. I generally documented things I&amp;rsquo;d had difficulty getting
working, because a) if I had trouble with the existing documentation, other
people would too and b) I have a memory like a goldfish, so it would be
useful for me if nothing else. But it took me years to really take the blog
seriously.&lt;/p&gt;

&lt;p&gt;At the end of 2008, I joined the
&lt;a href=&#34;http://www.meetup.com/Londonjavacommunity/&#34;&gt;London Java Community&lt;/a&gt;, largely
because I had returned to London from a year working in New York, and a) I needed a new job (during
the height of the crisis, when my recent experience was all financial
markets!) and b) although I had friends in London, I needed to rebuild my
social networks, and I was using meetup.com to do this. I tried lots of other
meetup groups, but like many geeks, I found it hard to connect to people
without the common ground of tech or code to talk about.&lt;/p&gt;

&lt;p&gt;Eventually I ended up working for &lt;a href=&#34;http://www.lmax.com/&#34;&gt;LMAX Exchange&lt;/a&gt;, and
because we were always looking
for keen, bright developers, I started getting much more involved in the LJC
so that I could help us hire people I actually wanted to work with. During
this time, people like &lt;a href=&#34;https://twitter.com/karianna&#34;&gt;Martijn&lt;/a&gt;,
&lt;a href=&#34;https://twitter.com/kittylyst&#34;&gt;Ben&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/jr0cket&#34;&gt;John&lt;/a&gt;
and, of course, &lt;a href=&#34;https://twitter.com/bcrecworks&#34;&gt;Barry&lt;/a&gt; were
encouraging me, consciously or not, to do a bit of technical presenting. I saw
a lot of different talks there, some from professional evangelists from
vendors, but many from &amp;ldquo;ordinary&amp;rdquo; developers like me. It made me think that
a) I should do this (awesome for your profile/career etc) and b) I &lt;em&gt;could&lt;/em&gt;
do this.&lt;/p&gt;

&lt;p&gt;Of course, I saw very few women presenting (I do remember an
awesome presentation from &lt;a href=&#34;https://twitter.com/fabianenardon&#34;&gt;Fabiane&lt;/a&gt;) and
also very few women members. Many members
assumed I was a recruiter, even before I started trying to chat to people
to, well, recruit them for LMAX. In the first 2 minutes of meeting someone,
if they didn&amp;rsquo;t ask me directly if I was in recruitment or HR, I would always
make it clear that I was a Java developer. It was tedious but something I
just got used to. Interestingly, once it was clear I was a Java person,
people seemed to accept that and just treat me like any other techie.&lt;/p&gt;

&lt;p&gt;I think this is one of the reasons I decided to start doing presentations - I
could a) show my own technical credentials, so I would spend less time having
these tiresome conversations (which, by the way, seems to have worked) and
b) make it more normal to see women techies, hopefully minimising the number
times other women faced the same assumptions (I&amp;rsquo;m not sure if this worked or
not, as I only have my own experiences to look at).&lt;/p&gt;

&lt;p&gt;But these thoughts were only floating around my mind, I didn&amp;rsquo;t actually
&lt;em&gt;do&lt;/em&gt; anything.  During this time, while working at LMAX, it seemed like there were lots of
things I &lt;em&gt;could&lt;/em&gt; blog about, or talk about, but I never really got round to it.
Plus, I wasn&amp;rsquo;t really sure what I was allowed to talk about and what I shouldn&amp;rsquo;t be
talking about. So apparently during these two years I only wrote a total of 6
posts, and I never did a single presentation at the LJC.&lt;/p&gt;

&lt;p&gt;However, I really wanted to do presenting and have time/inspiration for the
blog, so I chose to leave LMAX and join
&lt;a href=&#34;http://www.thoughtworks.com/&#34;&gt;ThoughtWorks&lt;/a&gt; - they were looking for
consultants and I knew this was a company that valued blogging and
presenting, and I&amp;rsquo;d had some exposure to their guys through the LJC and,
years before, I&amp;rsquo;d seen them speaking at
&lt;a href=&#34;http://mechanitis.blogspot.com.es/2007/03/qcon-london.html&#34;&gt;QCon London&lt;/a&gt;,
which had actually been my initial inspiration for blogging.
I told LMAX that was why I was leaving, and off I went.&lt;/p&gt;

&lt;p&gt;So it&amp;rsquo;s 2011, and I&amp;rsquo;ve joined ThoughtWorks. I revived the blog while I was
unassigned to a project, I invested that time in porting the blog to a
more sensible platform, and trying to write a blog a day. Again, I picked
topics I could comfortably talk about - I spoke about my experiences as a
&lt;a href=&#34;/post/my_experiences_with_android_development/&#34;&gt;beginner trying Android for the first
time&lt;/a&gt; (sometimes people will be arsey
with beginners, but in reality many real human beings can&amp;rsquo;t tell you you&amp;rsquo;re
wrong when you&amp;rsquo;re just talking about your own experiences), and despite my
original intent to blog with zero gender identity (I was genuinely afraid
that if I wrote about tech subjects and I was wrong, or very junior, I would
give women programmers a bad name) I decided to blog about &amp;ldquo;the women in
technology subject&amp;rdquo;. Again, here I went for my personal opinion/experiences,
for which only mean people can criticise you (mean people are easier to
ignore than correct people :) )&lt;/p&gt;

&lt;p&gt;I was also fortunate enough to meet &lt;a href=&#34;http://martinfowler.com/&#34;&gt;Martin Fowler&lt;/a&gt;
in person while he was over
in London. We were talking over drinks (this is London, after all) about the
women in technology thing (ThoughtWorks are really big on this subject, and
determined to do something positive in this area), and I was complaining about
the lack of women at a particular conference. He asked me if I had submitted
a talk for the conference.  Me?? Of course not! I&amp;rsquo;m not ready for that! I&amp;rsquo;ve
got nothing to talk about. I haven&amp;rsquo;t been given permission to do this, or
guidance on how to do it. I haven&amp;rsquo;t even presented at the user group yet. But
it did make me think - I said I wanted to present, so what was stopping me?
Did I need someone to guide me through it, to assign it to me as a task? It
was going to be up to me to make this happen. And if Martin Fowler, who
had just met me 5 minutes beforehand, thinks I&amp;rsquo;m ready to do this, then who&amp;rsquo;s
to tell me I&amp;rsquo;m not? What&amp;rsquo;s the worst that could happen?&lt;/p&gt;

&lt;p&gt;Of course life then got in the way - I was assigned to a couple of projects,
so the blogging stopped. I was interested in attending or
speaking at conferences, but wasn&amp;rsquo;t going to have anything ThoughtWorksy to
talk about for quite a while. And now, because I was commuting to my assigned
project, I had very little time even for the LJC.&lt;/p&gt;

&lt;p&gt;At this point, LMAX called
to let me know that the talk they&amp;rsquo;d done at QCon San Francisco,
&lt;a href=&#34;http://www.infoq.com/presentations/LMAX&#34;&gt;&amp;ldquo;How to Do 100K TPS at Less than 1ms Latency&amp;rdquo;&lt;/a&gt; had been
enormously popular, and they were open sourcing
&lt;a href=&#34;https://github.com/LMAX-Exchange/disruptor&#34;&gt;The Disruptor&lt;/a&gt; and wanted to do
some evangelism around this - did I want to come back and help a) do
evangelism and b) co-ordinate the company&amp;rsquo;s evangelism?  Yes, yes I did. So,
after just 3 months, I quit TW and went back to LMAX&lt;sup&gt;2&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Back at LMAX, I started to take evangelism more seriously.&lt;/p&gt;

&lt;p&gt;I tried to blog every week - I set aside Sundays for blogging (at the time
I was, fortunately for my particular choices, single and not overburdened
with a social life outside of the LJC). I wasn&amp;rsquo;t going to sit all alone in my
tiny flat, so I&amp;rsquo;d go to the pub with my shiny new Macbook Air, bought
specially for blogging (thanks ThoughtWorks, you spoiled me - I needed a mac
after I&amp;rsquo;d invested 3 months getting to grips with the one you gave me) and
write &lt;em&gt;something&lt;/em&gt;. It wasn&amp;rsquo;t always amazing, but I&amp;rsquo;d do something. During the
week, when ideas came to me, I&amp;rsquo;d make a note of the title in the blogging
tool so that when Sunday came I&amp;rsquo;d pick one and go with it.  Early on it was
fairly easy - we&amp;rsquo;d released a white paper on the Disruptor, but I found it
hard to understand what it really meant, so I spent Sundays writing shorter
articles breaking down how it worked and how to use it. I needed a LOT of
help from &lt;a href=&#34;http://www.real-logic.co.uk/about.html&#34;&gt;Martin Thompson&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/mikeb2701&#34;&gt;Mike
Barker&lt;/a&gt; to understand it, but they were patient
with me (plus I think they were happy that &lt;em&gt;someone&lt;/em&gt; was writing this and it
didn&amp;rsquo;t
have to be them). They took the heavier, more complicated subjects and I
pitched my stuff at developers like myself. When I ran out of Disruptor
stuff, I moved on to the topics I had in the backlog - I generally had more
ideas for blogs than time to blog, so I ended up with quite a long list to
pick from. The key is to make a note of it at the time you think of it, and
not try and think of a topic when you sit down with time to blog.&lt;/p&gt;

&lt;p&gt;I coordinated our events and publicised them on the new LMAX blog I&amp;rsquo;d created.
&lt;a href=&#34;https://twitter.com/davefarley77&#34;&gt;Dave Farley&lt;/a&gt; was often presenting on
something Continuous Delivery related since
&lt;a href=&#34;http://amzn.to/1NyUQ53&#34;&gt;his book&lt;/a&gt; had been released, and Martin was talking
about hardcore concurrency stuff.&lt;/p&gt;

&lt;p&gt;Mike and I got even more involved in the LJC, not just to recruit people.  We
got involved in the JCP and OpenJDK - since LMAX was doing cutting edge
technology stuff with Java, we wanted to see where the language was going
and influence it too if possible.&lt;/p&gt;

&lt;p&gt;Martijn must&amp;rsquo;ve got fed up my lack of drive in the presenting area, as he
pretty much forced me to do my first presentation.  In a
nice way! But he told me I was ready, he checked my content before I did it,
and I did a short talk on the JCP.&lt;/p&gt;

&lt;p&gt;At this point, my plan was to spend this first year of presenting doing short
talks at the JUG, maybe work my way up to a longer talk by the end of the year, or maybe
the following year, then the year after that to submit to conferences.&lt;/p&gt;

&lt;p&gt;Well, with amazing mentors like mine, that didn&amp;rsquo;t happen. Martin Thompson was
due to
give a talk at JavaOne at the end of that year (still 2011), and I was lucky
enough to get a ticket at the last minute (we won the &lt;a href=&#34;https://www.java.net/dukeschoice/2011&#34;&gt;Duke&amp;rsquo;s Choice Award
for Innovative Programming Framework&lt;/a&gt;,
and LMAX was awesome enough to let me have the ticket to the
conference to receive the award, since the evangelism efforts and blogging
had had a direct influence on us winning this award). Martin
asked if I wanted to co-present with him. Of course this was terrifying! I
hadn&amp;rsquo;t even done a full length talk at the LJC, I had barely even been to a
conference, let alone presented at the largest Java conference In The World!
So I said yes. These opportunities do not come up every week. It&amp;rsquo;s a talk
Martin had given various times before, he would be there to pick up the slack
if I freaked out, and I knew this material, I&amp;rsquo;d been blogging about it and
answering questions for the last 6 months.&lt;/p&gt;

&lt;p&gt;It really was as terrifying as I thought.  But.  It went well. I answered
difficult questions. We got great feedback.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/post/javaone_2011_roundup/&#34;&gt;JavaOne 2011&lt;/a&gt;
was an important milestone in my evangelism career.  Not only
did I get to put this presentation on my CV, I got to meet a lot of people in
this network: Martin introduced me to a lot of high performance specialists;
Martijn and Ben introduced me to people involved in the JCP, to other Java
User Group leaders, and we somehow got in to the O&amp;rsquo;Reilly party -
I finally got to meet a book publisher and get one step closer to my dream
of writing a book. I also met the ladies behind &lt;a href=&#34;http://jduchess.org/&#34;&gt;Duchess&lt;/a&gt;,
and they introduced me to
&lt;a href=&#34;https://twitter.com/Stephan007&#34;&gt;Stephan&lt;/a&gt; who runs Devoxx. This turned out
to be an important step in turning an idea I had for a panel into a Devoxx
reality.&lt;/p&gt;

&lt;p&gt;This is October.  By the end of the year I had also presented at &lt;a href=&#34;/presentation/video_of_our_jax_london_session/&#34;&gt;JAX London
with Mike&lt;/a&gt;, and at
&lt;a href=&#34;/post/why_we_shouldnt_target_women/&#34;&gt;Devoxx Belgium on a panel&lt;/a&gt;,
largely thanks to the contacts I
had made and the prestige of having a JavaOne talk under my belt.  So I went
from basically zero at the start of that year (my blog had been dormant for
years and I had no experience presenting) to having a blog with thousands of
hits a month and being an &amp;ldquo;international conference speaker&amp;rdquo;. In many ways I
got lucky, because the Disruptor was a really interesting, technical topic
that is in an area developers feel they should understand (high performance).
But I believe it was more a) determination to make this work, even if it
meant using my own time to write blogs and prepare presentations and b)
fantastic mentors who pushed me to do it and opened up their networks to me,
that facilitated this rapid rise.&lt;/p&gt;

&lt;p&gt;Honestly, after that things were a lot easier - I had the experience
presenting at conferences, I had Martin and Martijn suggesting conferences to
me (and introducing me to the right people where appropriate), which got me
into the QCon/GOTO loop and into OSCON. With videos of my presentations
availble, combined with the reach of my blog, I also had people approaching
me to do other events, like user groups in the cities I was visiting, and
conferences I had never heard of.  I think it helped that I&amp;rsquo;m a woman,
because conferences are always actively looking to increase their diversity
(whatever it might seem like at times!), but I think that anyone could follow
these sorts of steps with a similar outcome.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m not going to talk much about my career after that, because really that&amp;rsquo;s
the tipping point - after that it was more of the same, really. I will say
that I left LMAX because the pressure to be a full time developer &lt;em&gt;and&lt;/em&gt; do
advocacy is hard, especially when you&amp;rsquo;re no longer single and you don&amp;rsquo;t have
the spare time you used to have. I joined
&lt;a href=&#34;https://www.mongodb.org/&#34;&gt;MongoDB&lt;/a&gt; because they were well known for
understanding the technical community, and because they were looking for an
evangelist who would continue to be an engineer (although not for 40 hours a
week every week). I think they might have hired me without the previous
experience, but the blogging and presenting experience was a big selling
point for the guy who became my boss.  I eventually left
them for &lt;a href=&#34;https://www.jetbrains.com/&#34;&gt;JetBrains&lt;/a&gt; because you learn, over
time, what your sweet spots are as an advocate/educator, and what your
interests are. After two years of MongoDB, I knew I really wanted to focus
on Java and the JVM, and JetBrains is a much better fit for that. I&amp;rsquo;m pretty
certain I would &lt;em&gt;not&lt;/em&gt; have got this job without a) having the
conference-presenting experience and therefore b) being known to the team
already through the conference circuit.&lt;/p&gt;

&lt;p&gt;Well. That was a massive post. That&amp;rsquo;s why I&amp;rsquo;ve been putting off
writing this for ages. That&amp;rsquo;s just my own story, I have another post in my
head about the challenges that face you on trying to sell the value of
evangelism/advocacy to your organisation (and maybe some suggestions). But
that&amp;rsquo;s for another day.&lt;/p&gt;

&lt;p&gt;In closing, I shall try to leave you with take-away points that I hope will
be helpful if you either want to become a technical advocate, or are interested
in just some aspects, like writing or presenting:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Join a user group.  I cannot, &lt;em&gt;cannot&lt;/em&gt; stress how important the LJC was to
my career. If you do nothing else, this is the one thing that can help you.
You will meet people who will inspire you or give you the kick up the
backside you need. Try to remember that many of these people, like me, were
developers like you before they became bloggers/authors/speakers. If they
can, you can. These people also have networks, and whether you like it or
not, it really is not what you know but who you know (but don&amp;rsquo;t let that put
you off - meeting the right people can be easier than becoming some sort of
super-expert!)&lt;/li&gt;
&lt;li&gt;Present at the user group. Preferably get them to video it - you can use
this in submissions to conferences, if it&amp;rsquo;s not a blind CFP they will like to
see examples of your style. Having an example, even one that you think isn&amp;rsquo;t
awesome, is much, much better than having nothing at all. (Also, and this is
not a blog post about becoming a better speaker, but do watch your own
videos - it&amp;rsquo;s &lt;em&gt;insanely&lt;/em&gt; painful the first few times, but it gets easier and
will help you to improve).&lt;/li&gt;
&lt;li&gt;Be prepared to commit your own time to this. I blogged and prepared talks
at weekends, even for companies that valued evangelism. I gave up evenings
to attend the user group.  This will be
especially important in the early days when you probably have a day job too.
This investment should pay off, either your company will learn to see the
value of it and give you more time (having developers attend and speak at the
LJC was enormously successful for recruitment for LMAX), or you will get a
job better suited to what you want to do.&lt;/li&gt;
&lt;li&gt;You don&amp;rsquo;t have to have something awesome to talk about. I got lucky with
the Disruptor, true. But our most in-demand topics at the Sevilla Java User
Group are &amp;ldquo;Introduction to&amp;hellip;&amp;rdquo; topics, especially for things that are
no-longer cutting edge - not all developers were early adopters, and now they
need an overview of &amp;ldquo;why NoSQL&amp;rdquo; or &amp;ldquo;what&amp;rsquo;s Docker&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;You don&amp;rsquo;t have to be awesome. Your blog doesn&amp;rsquo;t have to be perfect English
(especially if you&amp;rsquo;re not a native). It just needs to clearly describe the
thing you&amp;rsquo;re trying to explain. You don&amp;rsquo;t
have to be &lt;a href=&#34;http://www.infoq.com/author/Damian-Conway&#34;&gt;Damian Conway&lt;/a&gt;(one of
my favourite presenters) when you speak - in my experience, a presenter
can get away with either &lt;em&gt;only&lt;/em&gt; great content or &lt;em&gt;only&lt;/em&gt; great delivery, you
actually don&amp;rsquo;t need both. I&amp;rsquo;ve been to conferences where presenters haven&amp;rsquo;t
really had either - you have to start somewhere, and audiences are
surprisingly forgiving (especially at user groups).&lt;/li&gt;
&lt;li&gt;Find mentors. Listen to them. You might not even meet them, you can watch
what they do. But I&amp;rsquo;d encourage you to find real human beings who are a step
or two closer to where you want to be. Talk to them, let them know what you
want. And let them bully you into doing scary things.&lt;/li&gt;
&lt;li&gt;Be yourself. Figure out your strengths and interests, and play to them. I
was scared of being a woman developer on show, via the blog or via
conferences, but it turns out to be an advantage. I was afraid that because
I&amp;rsquo;m not Martin Thompson I can&amp;rsquo;t possibly talk about difficult technical
subjects. But I don&amp;rsquo;t have to be him, I can be me - I can explain things to
the level that I need to understand them, so other developers like me can
catch up with me. We don&amp;rsquo;t need to all be genius-level.&lt;/li&gt;
&lt;li&gt;Do things that scare you. The terrifying things are the things that got me
the furthest.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I hope this helps someone.&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt;Evangelism / Technical Advocacy - I use these terms fairly
interchangeably. Evangelism was the common name some years back, but many
are uncomfortable with the religious overtones, so instead prefer Advocacy.&lt;br /&gt;
&lt;sup&gt;2&lt;/sup&gt; This is why I often talk about being at ThoughtWorks for a
minute and a half - I really loved a lot of things about the company, but what
I really wanted to do was offered to me in a company I already knew, where I
could get going straight away without any ramp up&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>New Year, New Adventures</title>
      <link>https://trishagee.github.io/post/new_year_new_adventures/</link>
      <pubDate>Wed, 10 Dec 2014 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>https://trishagee.github.io/post/new_year_new_adventures/</guid>
      <description>&lt;p&gt;Just over two years ago, &lt;a href=&#34;/post/and_for_my_next_trick/&#34;&gt;I embarked upon a journey&lt;/a&gt; as a developer / evangelist for a company who was then
called 10gen (who got fed up of saying &amp;ldquo;the MongoDB people&amp;rdquo;, and transformed into &lt;a href=&#34;http://www.mongodb.com/&#34;&gt;MongoDB Inc&lt;/a&gt;). My goals for
this role were: to learn what it was
like working for a company that produced a technology product; to discover what impact working in an open source fashion has; and to
level up my advocacy skills.  I have met all these goals, and more - I met some fantastic people; learnt different approaches to
software development; discovered my new favourite database for creating applications; moved to Spain; started both a
&lt;a href=&#34;http://www.meetup.com/Sevilla-MongoDB-User-Group/&#34;&gt;MUG&lt;/a&gt; and a &lt;a href=&#34;http://www.meetup.com/SVQJUG/&#34;&gt;JUG&lt;/a&gt;;
worked to understand the value of community and evangelism, and to help create a strategy for these areas;
and my evangelism efforts and open source work earned me the &lt;a href=&#34;https://java.net/website/java-champions/bios.html#Gee&#34;&gt;Java Champion&lt;/a&gt; title.
I&amp;rsquo;m extremely proud of what I&amp;rsquo;ve achieved over this period, and very grateful to MongoDB for giving me these opportunities.&lt;/p&gt;

&lt;p&gt;But now, a new adventure is about to begin.  If you&amp;rsquo;ve seen my &lt;a href=&#34;/presentation/angularjs_html5_groovy_java_mongodb_wcpgw/&#34;&gt;live coding demo&lt;/a&gt;
this year, you&amp;rsquo;ll know of my love affair with &lt;a href=&#34;https://www.jetbrains.com/idea/whatsnew/&#34;&gt;IntelliJ IDEA&lt;/a&gt;,
a tool I use daily (even for blogging). Well, now I&amp;rsquo;m joining the team at &lt;a href=&#34;https://www.jetbrains.com/&#34;&gt;JetBrains&lt;/a&gt;,
where I&amp;rsquo;m going Full Advocate. I &lt;em&gt;hope&lt;/em&gt; this means I get to carry on doing more of what I love - presenting, writing,
and working on demos to help developers become more productive. I hope this will give me opportunities to stay ahead of the curve in the
Java/JVM world.&lt;/p&gt;

&lt;p&gt;And yes, in answer to the Most Frequently Asked Question, I am staying in Spain. I&amp;rsquo;ve fallen in love with Sevilla and I&amp;rsquo;m not ready to
leave yet.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/static/images/Sevilla.jpg&#34; alt=&#34;Sevilla Cathedral&#34; title=&#34;Sevilla Cathedral&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;I shall leave you with my somewhat disasterous &amp;ldquo;Top Ten IntelliJ Tips&amp;rdquo; from GOTO Aarhus, which is worth watching just to see Dan North
save me from the curse of the live demo.  Things can only get better from here, right?&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/QsHasoJUgKo&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Staying Ahead of the Curve</title>
      <link>https://trishagee.github.io/presentation/staying_ahead_of_the_curve/</link>
      <pubDate>Mon, 10 Nov 2014 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>https://trishagee.github.io/presentation/staying_ahead_of_the_curve/</guid>
      <description>

&lt;p&gt;Last Thursday I gave a keynote at
&lt;a href=&#34;http://gotocon.com/berlin-2014/presentation/Party%20Keynote:%20Staying%20Ahead%20of%20the%20Curve&#34;&gt;GOTO Berlin&lt;/a&gt; to address the problems
of deciding how to learn a new technology/framework/process (Spoiler Alert: it&amp;rsquo;s not by putting it into production).&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/qWKf3ROVgrY?list=PLEx5khR4g7PIIBNcNhHOMmOhzxcwI5joG&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/41120693&#34; width=&#34;425&#34; height=&#34;355&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%&#34; allowfullscreen&gt; &lt;/iframe&gt;
 

&lt;p&gt;I presented a shorter, more succinct version of this talk at &lt;a href=&#34;https://vimeo.com/139726208&#34;&gt;The Lead Developer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;During the talk I show an example of how &lt;em&gt;not&lt;/em&gt; to &lt;a href=&#34;https://gist.github.com/trishagee/a3e4a54329e94ada2fe2&#34;&gt;implement lambdas&lt;/a&gt;,
and I also demonstrate a very crude performance test for using &lt;code&gt;parallelStream&lt;/code&gt;. I&amp;rsquo;m not going to link to the performance test as it&amp;rsquo;s
not a shining example of how to write these sorts of tests, but if you&amp;rsquo;re desperate you&amp;rsquo;ll be able to find it in my Github repo.&lt;/p&gt;

&lt;p&gt;I also talk about how amazing Spock is, so if you&amp;rsquo;re interested you can read more about
&lt;a href=&#34;http://trishagee.github.io/tags/spock/&#34;&gt;my experiences with Spock&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This talk was built off an &lt;a href=&#34;/post/staying_ahead_of_the_curve/&#34;&gt;earlier blog post&lt;/a&gt; I wrote, about how to decide which technologies to
invest your personal time in.&lt;/p&gt;

&lt;p&gt;EDIT: The talk has been updated for 2016 and the Agile aspects emphasised in a version presented at Agile Manchester.&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/Fp4LPkfAGcL8FF&#34; width=&#34;595&#34; height=&#34;485&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;//www.slideshare.net/trishagee/staying-ahead-of-the-curve-62186557&#34; title=&#34;Staying Ahead of the Curve&#34; target=&#34;_blank&#34;&gt;Staying Ahead of the Curve&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;//www.slideshare.net/trishagee&#34; target=&#34;_blank&#34;&gt;Trisha Gee&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ll leave you with this crude decision
chart and the mind-map of potential ways to play with a technology. Remember, learning to say &lt;em&gt;&amp;ldquo;no&amp;rdquo;&lt;/em&gt; to a technology can be very powerful.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/static/images/staying-ahead/why-learn.png&#34; alt=&#34;Decision Flow Diagram&#34; title=&#34;Decision Flow Diagram&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/static/images/staying-ahead/approaches.jpg&#34; alt=&#34;Approaches to trying new technologies&#34; title=&#34;Approaches to trying new technologies&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;PS I&amp;rsquo;m thinking of writing a book, &lt;a href=&#34;https://leanpub.com/careeradviceforprogrammers/&#34;&gt;Career Advice for Programmers&lt;/a&gt;. If you&amp;rsquo;re
interested, let me know (because, you know, I&amp;rsquo;ve got loads of spare time for another project, sigh&amp;hellip;).&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;toc_0&#34;&gt;Presentation Abstract&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;We all want to stay ahead of the curve - after all, that&amp;rsquo;s what you go to a conference for. But have you ever considered how being ahead
of the curve might be dangerous?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Using a new language before you understand it, putting a technology into production so you can learn it,
abandoning &amp;ldquo;old practices&amp;rdquo; before you&amp;rsquo;ve got the benefit from them… These things are common practice,
under the guise of Progress and Keeping Up To Date.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;But while we shouldn&amp;rsquo;t be running around like headless chickens chasing the next Shiny New Thing,
we do need to see to our Continuous Learning and, of course, we should Embrace Change.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How do we balance these two extremes? And how do we see to our own growth and learning as techies while meeting the needs of our
project, team and organisation?&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Career Advice for Programmers (YOW 2013)</title>
      <link>https://trishagee.github.io/presentation/yow_2013_career_advice_for_programmers/</link>
      <pubDate>Thu, 17 Apr 2014 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>https://trishagee.github.io/presentation/yow_2013_career_advice_for_programmers/</guid>
      <description>&lt;p&gt;Since I have a tendancy to bang on every now and again about how we, as developers, could do better in managing our careers (for example,
by &lt;a href=&#34;/post/how_to_make_your_cv_not_suck/&#34;&gt;creating CVs that don&amp;rsquo;t suck&lt;/a&gt;, and by &lt;a href=&#34;/post/staying_ahead_of_the_curve/&#34;&gt;staying ahead of the curve&lt;/a&gt;),
&lt;a href=&#34;http://www.davethomas.net/&#34;&gt;Dave Thomas&lt;/a&gt; asked me to speak for a mere 50 minutes on the subject at &lt;a href=&#34;http://gotocon
.com/video#36&#34;&gt;GOTO Aarhus&lt;/a&gt;, a talk I wasn&amp;rsquo;t enormously happy with as there was no way to cover a lifetime of hard-fought experience in such a short
time.  Dave seemed to like something in it though, as he gave me the opportunity to present the topic again at YOW last December,
and this time I think I managed to distill the important points into the (still ridiculously short) time allotted.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://yow.eventer.com/yow-2013-1080/career-advice-for-programmers-by-trisha-gee-1380&#34;&gt;See the video here&lt;/a&gt;,
and please give me any feedback you have.&lt;/p&gt;

&lt;p&gt;I recognise there are many many more topics I could cover, so I&amp;rsquo;d better start making a list.  Suggestions?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GDL Presents Women Techmakers with Trisha Gee</title>
      <link>https://trishagee.github.io/presentation/gdl_presents_women_techmakers_with_trisha_gee/</link>
      <pubDate>Thu, 07 Mar 2013 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>https://trishagee.github.io/presentation/gdl_presents_women_techmakers_with_trisha_gee/</guid>
      <description>&lt;p&gt;I was flattered a couple of weeks ago to be interviewed by Google as part of their women techmaker&amp;rsquo;s series,
as it moves over to Europe.  In this video I talk about going to Mars, education, planning your career, being a developer,
and the impact of technology on our lives.  So, not much&amp;hellip;&lt;/p&gt;

&lt;iframe allowfullscreen=&#34;&#34; frameborder=&#34;0&#34; height=&#34;315&#34; src=&#34;http://www.youtube.com/embed/68bsagK7GEM&#34; width=&#34;560&#34;&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Staying Ahead of the Curve</title>
      <link>https://trishagee.github.io/post/staying_ahead_of_the_curve/</link>
      <pubDate>Wed, 20 Feb 2013 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>https://trishagee.github.io/post/staying_ahead_of_the_curve/</guid>
      <description>&lt;p&gt;I had an interesting discussion last night at the &lt;a href=&#34;http://www.meetup.com/Londonjavacommunity/&#34;&gt;LJC&lt;/a&gt; developer sessions, and
it&amp;rsquo;s a topic that comes up again and again:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;How do I stay ahead of the curve?  There are so many technologies out there, and more coming along, I can&amp;rsquo;t even keep up with Java,
let alone the other JVM languages, HTML5, JavaScript frameworks, NoSQL, Big Data&amp;hellip;. argh!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Technology, particularly development, seems to move at an ever-increasing pace.  Sure, the Internet makes it a lot easier for us to get
access to information than in the Olden Days, when people probably had to read papers and books,
and physically meet up to share knowledge, but that just makes the sheer volume of information even more overwhelming.&lt;/p&gt;

&lt;p&gt;So how &lt;em&gt;do&lt;/em&gt; you keep on top of all those technologies?&lt;/p&gt;

&lt;p&gt;You don&amp;rsquo;t.&lt;/p&gt;

&lt;p&gt;You can&amp;rsquo;t.  If you devoted yourself to learning the same way you did at university (pfff, well,
theoretically you devoted yourself to learning&amp;hellip;), you could still never master every technology out there,
and every new language and framework that pops up daily.  Even people who pick a technology stack that&amp;rsquo;s suitable for purpose (let&amp;rsquo;s go
with the old favourite Spring/Hibernate combo) can&amp;rsquo;t read every blog post about those technologies and see every conference talk that
was ever videoed.  To be the best even at Just Java, you&amp;rsquo;d have to be a master of concurrency, understand garbage collection,
have read all revisions of
&lt;a href=&#34;http://www.amazon.com/gp/product/0321356683/ref=as_li_tf_tl?ie=UTF8&amp;amp;amp;camp=1789&amp;amp;amp;creative=9325&amp;amp;amp;creativeASIN=0321356683&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=trissramb-20&#34;&gt;Effective Java&lt;/a&gt;,
know every detail of all versions of Java, including all the changes coming in &lt;a href=&#34;http://jdk8.java.net/&#34;&gt;Java 8&lt;/a&gt;,
be aware of all the &lt;a href=&#34;http://jcp.org/en/jsr/stage?listBy=jsr&#34;&gt;JSRs&lt;/a&gt; in progress.  They&amp;rsquo;d have to have read about waterfall development,
the &lt;a href=&#34;http://www.amazon.com/gp/product/0201835959/ref=as_li_tf_tl?ie=UTF8&amp;amp;amp;camp=1789&amp;amp;amp;creative=9325&amp;amp;amp;creativeASIN=0201835959&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=trissramb-20&#34;&gt;Mythical Man-Month&lt;/a&gt;,
&lt;a href=&#34;http://www.amazon.com/gp/product/0321278658/ref=as_li_tf_tl?ie=UTF8&amp;amp;amp;camp=1789&amp;amp;amp;creative=9325&amp;amp;amp;creativeASIN=0321278658&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=trissramb-20&#34;&gt;XP&lt;/a&gt;,
&lt;a href=&#34;http://www.amazon.com/gp/product/0130676349/ref=as_li_tf_tl?ie=UTF8&amp;amp;amp;camp=1789&amp;amp;amp;creative=9325&amp;amp;amp;creativeASIN=0130676349&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=trissramb-20&#34;&gt;Scrum&lt;/a&gt;, Lean, &lt;a href=&#34;http://www.infoq.com/presentations/Leaner-Programmer-Anarchy&#34;&gt;Programmer Anarchy&lt;/a&gt;,
so that they could know they are working in the most effective way for the business and team they are in.&lt;/p&gt;

&lt;p&gt;All that as well as working 40 hours a week on the day job.&lt;/p&gt;

&lt;p&gt;So to expect to know the ins and out of all current (and maybe dated) technologies, and all upcoming ones - not knowing which are just
fads and which are going to be the Next Big Thing - is impossible.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;But don&amp;rsquo;t you ask candidates how they stay current when you interview them?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yes I do. And actually it&amp;rsquo;s their willingness to at least try, and their ability to filter out and select the things to investigate or be
aware of that interests me, not their deep understanding of Scala when they&amp;rsquo;re working in a Java EE environment (for example).&lt;/p&gt;

&lt;p&gt;There are two reasons that I can think of to &amp;ldquo;stay ahead of the curve&amp;rdquo;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;To be more effective in your job&lt;/li&gt;
&lt;li&gt;To get your next job&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you&amp;rsquo;re aiming for point one, it&amp;rsquo;s a little easier to filter out the noise and focus on what&amp;rsquo;s relevant.  In your place of work,
there are going to be hard limits on new stuff you can use.  For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your systems guys will not allow new languages, even JVM ones, in a production environment.  In which case,
you don&amp;rsquo;t need to worry about learning them in any detail.&lt;/li&gt;
&lt;li&gt;Your company has paid a heavy subscription fee for their existing database, therefore they will not be trying out funky
&lt;a href=&#34;/post/nosql_is_a_stupid_name/&#34;&gt;NoSQL&lt;/a&gt; solutions.  Fine, you don&amp;rsquo;t have to research them.&lt;/li&gt;
&lt;li&gt;You&amp;rsquo;re working on a messaging system with no UI.  In which case, you can let the new JavaScript frameworks rise and fall without
worrying too much about them.&lt;/li&gt;
&lt;li&gt;You work for a consultancy that specialises in government work, and documentation is sacred.  So,
don&amp;rsquo;t worry about going to a bunch of agile/lean conferences, you probably won&amp;rsquo;t be able to sell it to your customers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now I&amp;rsquo;m not saying these circumstances apply to everyone. And I&amp;rsquo;m not suggesting these are necessarily the best situations to be in.&lt;br /&gt;
But you can look at your current position and, if you intend to stay there, it might rule out a lot of the technology/process learning
that&amp;rsquo;s available.&lt;/p&gt;

&lt;p&gt;Point one suggests good places for research.  For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You&amp;rsquo;re using Spring dependency injection and you don&amp;rsquo;t speak XML fluently.  So you might research Spring wired up via Java and
&lt;a href=&#34;http://blog.springsource.org/2007/05/14/annotation-driven-dependency-injection-in-spring-21/&#34;&gt;annotations&lt;/a&gt;, or you might look at
&lt;a href=&#34;http://code.google.com/p/google-guice/&#34;&gt;Guice&lt;/a&gt;, or you might do a bit more reading around good practises in XML, or tools you
can add to your IDE to make your life easier (&lt;a href=&#34;http://www.eclipse.org/&#34;&gt;Eclipse&lt;/a&gt; and
&lt;a href=&#34;http://www.jetbrains.com/idea/features/xml_editor.html&#34;&gt;IntelliJ&lt;/a&gt; both support XML refactoring).&lt;/li&gt;
&lt;li&gt;Your &lt;a href=&#34;http://ant.apache.org/&#34;&gt;Ant&lt;/a&gt; scripts are killing you, and you don&amp;rsquo;t know where your library jars should live.  You could read a
lot more about Ant, you might look into &lt;a href=&#34;http://maven.apache.org/&#34;&gt;Maven&lt;/a&gt;, &lt;a href=&#34;http://ant.apache.org/ivy/&#34;&gt;Ivy&lt;/a&gt;,
and &lt;a href=&#34;http://www.gradle.org/&#34;&gt;Gradle&lt;/a&gt; (hint - gradle is awesome if you don&amp;rsquo;t like programming in XML).&lt;/li&gt;
&lt;li&gt;You spend all your time coercing objects into something &lt;a href=&#34;http://www.hibernate.org/&#34;&gt;Hibernate&lt;/a&gt;-shaped,
and not actually delivering new functionality.  Maybe you could become a Hibernate guru instead of just poking at it like most of us do,
or you could investigate different persistence frameworks or mechanisms.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You get the idea.  If you feel pressured to keep learning and you&amp;rsquo;re not looking for a new job, there&amp;rsquo;s plenty you can be doing within
the framework of your day job.  The best thing about this is that you might even be able to persuade your boss that you need to do some
or all of this learning on work time, leaving you more time for your kids/spouse/drinking/XBox.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I&amp;rsquo;m really much more motivated to learn skills to find that great new job&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Point two is a bit more tricky.  When you&amp;rsquo;re looking for a new job, it seems like every job description contains all technologies under
the sun; it seems like interviewers expect you to be an expert in all sorts of different areas; it&amp;rsquo;s impossible to tell which jobs are
good and which are poor, so you apply for everything and try to learn everything to get to the interview.&lt;/p&gt;

&lt;p&gt;Now if you&amp;rsquo;re already at the applying-for-a-new-job stage, you might not actually have time to learn everything under the sun.  And if
you&amp;rsquo;re still working at the current place and just looking around to see what&amp;rsquo;s out there, you might not have time to train yourself up
on all those great new JavaScript frameworks while doing the day job.&lt;/p&gt;

&lt;p&gt;How on earth do you pick which things to focus on?&lt;/p&gt;

&lt;p&gt;Well, it&amp;rsquo;s surprisingly easy.  Just pick the ones that interest you.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;But what if I&amp;rsquo;m falling behind on technology X and it turns out to be The Next Big Thing?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well, by the time it becomes the next big thing, you&amp;rsquo;ll have heard enough about it to know whether or not you care  - either because it
interests you or because it&amp;rsquo;s so big you should care.  And by then, there will be plenty of knowledge out there (blogs,
courses. conferences, books&amp;hellip;) so you&amp;rsquo;ll be able to pick it up much easier than when it was at the embryonic stage and no-one really
knew what to use it for. Java is, what, 17 years old now, and people are still starting to learn it now.  No-one said you had to have
coded with Java 1.0 in order to be effective in a Java 8 lambdas world.  In fact, you could argue that those who learnt it early on
might be less able to adjust to the current state of play.&lt;/p&gt;

&lt;p&gt;So.  Learn something because it interests you, or it&amp;rsquo;s fun, or you personally can see the value of it. Even the process of learning
something new is valuable, even if the thing you learnt is not - it exercises those brain-muscles so they&amp;rsquo;re used to picking up
something unfamiliar and playing with it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;But I see a thousand jobs for Scala/HTML5/&amp;lt;insert tech here&amp;gt;! Should I learn that?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Have you looked at Scala?  Do you like it?  Do you want to learn a whole new language?  Do you want to spend the next two years of your
career working in Scala?  Because if you learn it to find a new job, and you &lt;em&gt;do&lt;/em&gt; find a new Scala job,
then you&amp;rsquo;re going to &lt;em&gt;have&lt;/em&gt; to use it, and to continue to learn it. And if you don&amp;rsquo;t really give a crap about Scala,
then why bother?  Have you looked at the types of companies that are advertising jobs for Scala?  Do you want to work there?  Again,
if not, don&amp;rsquo;t bother.&lt;/p&gt;

&lt;p&gt;In our industry, particularly if you live and work in places like London, New York, Silicon Valley, there are &lt;em&gt;lots&lt;/em&gt; of jobs,
even in these Tough Economic Times.  You don&amp;rsquo;t need to take any old job (unless you need a job Right Now,
in which case I would advise you take Any Old Job and work on the side to find The Right Job to move to imminently).&lt;/p&gt;

&lt;p&gt;The point is, you&amp;rsquo;re freaking out because there are all these different technologies and all these jobs that are looking for different
combinations of all these different skills, and this is a Good Thing.  You&amp;rsquo;ve been looking at it wrong - you think you need to be
everything anyone wants, so that someone out there will pick you, like some sort of school sports team selection.  But it&amp;rsquo;s not like
that - the selection power is in &lt;em&gt;your&lt;/em&gt; hands.  You can wade through those millions of job postings and find the ones that interest
you.  You can invest in becoming skilled at the things you like, the things you enjoy, the things that scratch your intellectual itch,
and you can then find a job that matches those skills.  Even better, if you&amp;rsquo;re active in learning those skills,
and visible at it (stack overflow, your blog, communities&amp;hellip;), you&amp;rsquo;re going to
&lt;a href=&#34;http://java.dzone.com/articles/ghost-who-codes-how-anonymity&#34;&gt;improve your chance of getting a job&lt;/a&gt; in the area that fascinates you.&lt;/p&gt;

&lt;p&gt;You don&amp;rsquo;t have to be good at everything.  Just find the things that interest you, stuff you feel motivated to learn about,
and then when you find a job that uses those skills, you know you&amp;rsquo;re in the right place.&lt;/p&gt;

&lt;p&gt;So in fact, there is only one reason to stay ahead of the curve:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Because you want to.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So it&amp;rsquo;s much easier to figure out what to spend time learning and what to ignore for now.&lt;/p&gt;

&lt;p&gt;You don&amp;rsquo;t have to stay ahead of &lt;em&gt;all&lt;/em&gt; the curves.  You just have to stay within tolerance of your own curve.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to make your CV Not Suck</title>
      <link>https://trishagee.github.io/post/how_to_make_your_cv_not_suck/</link>
      <pubDate>Wed, 21 Dec 2011 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>https://trishagee.github.io/post/how_to_make_your_cv_not_suck/</guid>
      <description>

&lt;p&gt;When you&amp;rsquo;re applying for a job at &lt;a href=&#34;http://www.lmax.com/&#34;&gt;LMAX&lt;/a&gt;, your CV (or résumé, for our American readers) usually comes through me and I decide whether
to call you for a technical phone screen.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m going to let you into a secret.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m going to tell you the criteria I use when judging your CV.&lt;/p&gt;

&lt;p&gt;Now, you could say this is a foolish thing for me to do, because now when you apply you&amp;rsquo;ll be &amp;ldquo;cheating&amp;rdquo; and writing your CV to pass
these guidelines.&lt;/p&gt;

&lt;p&gt;Good.&lt;/p&gt;

&lt;p&gt;LMAX isn&amp;rsquo;t the only company that&amp;rsquo;s going to judge your CV based on these criteria. I firmly believe that an increase in quality of the
CVs in our industry can only be A Good Thing.  An increase in the quality of &lt;em&gt;your&lt;/em&gt; CV is definitely A Good Thing for
&lt;em&gt;you&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Even more importantly, if I get CVs that do not pass these basic criteria, now I know you either don&amp;rsquo;t read the &lt;a href=&#34;http://blogs.lmax.com/&#34;&gt;LMAX blogs&lt;/a&gt; (shame on
you), or you&amp;rsquo;re not able to follow simple instructions (bodes poorly for your ability to learn within the company).&lt;/p&gt;

&lt;p&gt;The thing that you have to keep in mind when you&amp;rsquo;re writing your CV is that the reader really does spend less than a minute reading it.
It&amp;rsquo;s not fair, true.  But it&amp;rsquo;s the way humans are. I&amp;rsquo;m not in HR or recruitment, I have a proper job as a software developer,
and I need to get back to that as soon as I can.  When I get CVs in batches of up to 12, as I regularly do,
I&amp;rsquo;m not free to spend more than 10 minutes going through all of them.&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;The Easy Stuff&lt;/h2&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;You must be able to spell&lt;/h3&gt;

&lt;p&gt;You really must.  There are things called Spell Checkers and they are amazing.  Some of these new-fangled pieces of software even show
you your errors in this cool squiggly red underline in your document.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m reading your CV in Open Office, and if I see red squigglies under words that aren&amp;rsquo;t technologies or acronyms I&amp;rsquo;m going to wonder how
good your attention to detail is.&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;You must use capital letters in the appropriate places&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s traditional to start a sentence with a capital.  It&amp;rsquo;s also traditional to use a capital &amp;ldquo;I&amp;rdquo; not &amp;ldquo;i&amp;rdquo; when referring to oneself. We&amp;rsquo;re
not 14 years old, we&amp;rsquo;re not writing an SMS to our mates.  We&amp;rsquo;re applying for a proper job paying proper money.&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;Correct grammar is appreciated&lt;/h3&gt;

&lt;p&gt;Whether you&amp;rsquo;re a native English-speaker or not, you need to get someone else who is a native English-speaker to check the prose in your
CV to see if it scans correctly. For me, it&amp;rsquo;s not about being prejudiced against you because you&amp;rsquo;re not a natural author,
it&amp;rsquo;s a) attention to detail again and b) your ability to make yourself understood.  If your sentence construction,
choice of words or simple comma placement is off, I&amp;rsquo;ll have to read that sentence a couple of times to parse it and it&amp;rsquo;s going to trip
me up and ruin my flow.  I want to get a good feel for you from reading your CV, so if I stumble a few times I&amp;rsquo;m not going to feel like
I connected with you.&lt;/p&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;Harder and fluffier&lt;/h2&gt;

&lt;h3 id=&#34;toc_5&#34;&gt;I don&amp;rsquo;t care which versions of Spring you&amp;rsquo;ve worked with&lt;/h3&gt;

&lt;p&gt;I know you need a checklist of technologies on your CV so it gets past the non-technical recruitment agents and get picked up via
automated searches.  This is a bigger problem with our industry than one I want to tackle right now.  So I&amp;rsquo;ll let you off having
buzzword bingo on your CV.  However, your CV needs to be more than just a list of technologies you have used vaguely,
or perhaps once read about.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s useful to me if a) you put the technology check list in a single place on your CV, b) you give an indication of your level of
proficiency in that technology (novice/competent/master) or length of time you&amp;rsquo;ve used it in a commercial environment,
and c) you organise them in some useful fashion - preferably the ones that are appropriate to the job you&amp;rsquo;re applying for near the top,
or at least those you&amp;rsquo;re happiest with at the top.  Alternatively put the checklist of technologies next to the role you used them in.&lt;/p&gt;

&lt;p&gt;Often I will completely ignore this section because I&amp;rsquo;m more interested in your ability to learn and your passion for what you do.&lt;/p&gt;

&lt;h3 id=&#34;toc_6&#34;&gt;I want to know about your passions&lt;/h3&gt;

&lt;p&gt;In the old days I used to fast forward to your hobbies and interests, but these days we&amp;rsquo;re encouraged not to put those on the CV in case
you&amp;rsquo;re judged against them.  Which seems like political correctness gone crazy, but then when you think about it you can infer a lot
about a person from their hobbies and interests, and therefore you could be pre-judging them based on some criteria that is not at all
associated with their ability to do the job.  For example, if they have hobbies that take them all over England I might infer they have
a car and can drive - OK, it&amp;rsquo;s a dumb example, but you get the idea.&lt;/p&gt;

&lt;p&gt;These days, given that I&amp;rsquo;m trying to find great team members to work with me at LMAX, I&amp;rsquo;m looking for things like: your blog; any
contributions to open source software; your involvement in a Java User Group (or other extra-curricular activity).  I&amp;rsquo;m not going to
discard you if you don&amp;rsquo;t have any of these things, but if you do it&amp;rsquo;s definitely extra brownie points for you.&lt;/p&gt;

&lt;h3 id=&#34;toc_7&#34;&gt;I want to know if you worship at the altar of technology, or if you&amp;rsquo;re business-value driven&lt;/h3&gt;

&lt;p&gt;Either of these things is fine - we need people who are very business-focussed and people who are rabid about technology,
as well as all those in between, to build a good team.  Another axis of interest is people/process - are you passionate about people,
about building a good team, about helping them to deliver?&lt;/p&gt;

&lt;p&gt;Getting a feel for where you sit on these axes is not for me to discard you, but if you look like you&amp;rsquo;re strongly in one of these camps
and I feel like we need a team member to really push that area, then you stand a much better chance of getting a phone interview.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ll get an indication of where you are by the way you talk about your roles and your achievements.  This does not help me:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Senior Developer on a web administration application.  Product was implemented using JavaScript, HTML, Spring, Hibernate, JMS, and MySQL.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is much more useful:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I was part of a team of four developers implementing a web based administration application, commissioned to enable internal users to
update the settings of our reporting tool.  This saved the support staff approximately 4 hours every week,
as they no longer needed to manually update the database. We used agile techniques such as daily standups and weekly iterations in order
to provide quick feedback to the business.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(I made both of those up, by the way, before anyone starts trying to sue me for stealing something off their CV).&lt;/p&gt;

&lt;p&gt;Here I can see:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The size of the team, and your ability to work in a team&lt;/li&gt;
&lt;li&gt;You understood the business need you were trying to fulfill&lt;/li&gt;
&lt;li&gt;You have worked in an agile environment and at least pay lip service to why you were working that way.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I don&amp;rsquo;t really care about the specific technologies you used, the fact that you mentioned web-based and database gives me enough of a
feel.&lt;/p&gt;

&lt;h3 id=&#34;toc_8&#34;&gt;Sometimes prospective employers really do stalk you&lt;/h3&gt;

&lt;p&gt;Personally I think claims that prospective employers will check every facet of your web presence are somewhat over-exaggerated.  If I
barely have 60 seconds to read your CV, I&amp;rsquo;m not going to check you out on Facebook, my life is too short.&lt;/p&gt;

&lt;p&gt;However, if you claim to have written a book I will look it up on
&lt;a href=&#34;http://amazon.com/?_encoding=UTF8&amp;amp;tag=trissramb-20&amp;amp;linkCode=ur2&amp;amp;camp=1789&amp;amp;creative=9325&#34;&gt;Amazon&lt;/a&gt;. If you have a publication or example
code, I will glance at those.  If you&amp;rsquo;ve worked for a company I&amp;rsquo;ve worked for in the past, I&amp;rsquo;ll look you up on
&lt;a href=&#34;http://uk.linkedin.com/in/trishagee&#34;&gt;LinkedIn&lt;/a&gt; to see if we have any common connections (or worse,
to see if I should remember you and simply don&amp;rsquo;t).  I&amp;rsquo;ll also use LinkedIn if your CV is not screaming yes or no,
to see if there&amp;rsquo;s an extra dimension in your profile which will tip me one way or the other.&lt;/p&gt;

&lt;p&gt;So be aware of your web presence, particularly something that is aimed at your professional image like LinkedIn,
and make sure it represents you the way you want it to.&lt;/p&gt;

&lt;h2 id=&#34;toc_9&#34;&gt;In Conclusion&lt;/h2&gt;

&lt;p&gt;This post might be simply a good way to increase my own workload - every CV I get from now on may be an automatic pass,
and then I have to call all of you before I can start weeding you out.&lt;/p&gt;

&lt;p&gt;But I don&amp;rsquo;t mind too much about that.  I get concerned sometimes that good people are not getting the interviews they deserve,
not just at LMAX but across the industry, because they get almost no good CV advice.  Frequently the people who are the first to read
CVs are agencies who are not technologists.  By all means, have words on there that will make your CV appear on their search results.&lt;br /&gt;
But you need to put something on there for me, a real developer, because strings of keywords tell me nothing about you.&lt;/p&gt;

&lt;p&gt;If I can improve the quality of just one person&amp;rsquo;s CV with this post, I&amp;rsquo;m happy.  If I have given you that first step towards that job
you &lt;em&gt;really&lt;/em&gt; want, then that&amp;rsquo;s even better.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
